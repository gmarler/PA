#!/usr/bin/env perl

use strict;
use warnings;
use v5.20;

# VERSION
# PODNAME: pa_client - the Performance Analytics Client

use Getopt::Long;
use JSON::MaybeXS;
use DateTime::TimeZone   qw();
use Net::Async::AMQP;
use IO::Async::Loop;
use Data::Dumper;
use Solaris::mdb;
use PA::AMQP::Client;
use PA::Capture::kstat;
use PA::Capture::DTrace;
use PA::Capture::mdb::memstat;

# This spike shows how PA clients starting up will initially post host specific
# information, so that it can be received and pre-inserted into the back end
# database before the host begins to send information.

my %client_ctor_args;
my $amqp_server;

my $kstats_to_collect =
  [
    [ qw( unix    0      system_pages) ],
    [ qw( unix    0      dnlcstats) ],
    [ qw( zfs     0      arcstats) ],
  ];

GetOptions( "amqp=s" => \$amqp_server )
  or die("ERROR in command line args");

if ($amqp_server) {
  $client_ctor_args{amqp_server} = $amqp_server;
}

my $loop = IO::Async::Loop->new();
$client_ctor_args{loop} = $loop;

my $client = PA::AMQP::Client->new( %client_ctor_args );

my $memstat_capture =
  PA::Capture::mdb::memstat->new( client         => $client,
                                  stat_name      => 'memstat',
                                );

say "AMQP SERVER: " . $client->amqp_server;
$loop->run();
