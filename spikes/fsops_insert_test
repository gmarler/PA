#!/usr/bin/env perl

use v5.18;
use strict;
use warnings;

use FindBin qw($Bin);

use lib "$Bin/../lib";

use Try::Tiny;
use PA::Schema;
use Data::Dumper;

use JSON::MaybeXS;
use DateTime             qw();
use DateTime::Format::Pg qw();
use Data::Dumper;
use Getopt::Long;

my $js_data =
'{"interval_data":[{"read:tmpfs":[[[6000,6099],1],[[6100,6199],1],[[6200,6299],1],[[6500,6599],1],[[7600,7699],1],[[7800,7899],1],[[7900,7999],4],[[8000,8099],1],[[8100,8199],2],[[8200,8299],1],[[8300,8399],1],[[8600,8699],5],[[8700,8799],3],[[8800,8899],5],[[8900,8999],2],[[9000,9099],3],[[9100,9199],1],[[9200,9299],1],[[9400,9499],3],[[9700,9799],2],[[9800,9899],1],[[9900,9999],1],[[10000,10999],7],[[11000,11999],2],[[12000,12999],1],[[14000,14999],2],[[17000,17999],1],[[19000,19999],1],[[20000,20999],1],[[22000,22999],2],[[23000,23999],1],[[24000,24999],1],[[25000,25999],1],[[26000,26999],1],[[27000,27999],1]],"map:tmpfs":[[[14000,14999],2],[[15000,15999],2],[[16000,16999],1]],"lookup:dev fs":[[[5200,5299],1],[[5300,5399],2],[[5400,5499],5],[[5500,5599],12],[[5600,5699],7],[[5700,5799],5],[[5800,5899],5],[[5900,5999],7],[[6000,6099],7],[[6100,6199],4],[[6200,6299],2],[[6300,6399],7],[[6400,6499],12],[[6500,6599],12],[[6600,6699],13],[[6700,6799],6],[[6800,6899],6],[[6900,6999],8],[[7000,7099],3],[[7100,7199],2],[[7200,7299],7],[[7300,7399],6],[[7400,7499],7],[[7500,7599],5],[[7600,7699],3],[[7700,7799],3],[[7800,7899],1],[[7900,7999],2],[[8000,8099],2],[[8100,8199],3],[[8200,8299],2],[[8400,8499],1],[[8500,8599],2],[[8600,8699],4],[[8700,8799],2],[[8800,8899],1],[[8900,8999],1],[[9100,9199],1],[[9700,9799],1],[[9800,9899],2],[[10000,10999],8],[[11000,11999],5],[[12000,12999],4],[[13000,13999],8],[[14000,14999],7],[[15000,15999],3],[[16000,16999],1],[[17000,17999],1],[[18000,18999],4],[[19000,19999],1],[[20000,20999],1],[[23000,23999],1],[[25000,25999],2],[[27000,27999],1],[[28000,28999],1]],"setattr:zfs":[[[47000,47999],1],[[50000,50999],1],[[51000,51999],1],[[52000,52999],1]],"readlink:zfs":[[[4700,4799],3],[[4800,4899],221],[[4900,4999],394],[[5000,5099],295],[[5100,5199],227],[[5200,5299],138],[[5300,5399],83],[[5400,5499],39],[[5500,5599],41],[[5600,5699],16],[[5700,5799],24],[[5800,5899],37],[[5900,5999],29],[[6000,6099],49],[[6100,6199],52],[[6200,6299],40],[[6300,6399],29],[[6400,6499],19],[[6500,6599],27],[[6600,6699],29],[[6700,6799],21],[[6800,6899],22],[[6900,6999],26],[[7000,7099],29],[[7100,7199],23],[[7200,7299],18],[[7300,7399],17],[[7400,7499],6],[[7500,7599],13],[[7600,7699],9],[[7700,7799],11],[[7800,7899],8],[[7900,7999],12],[[8000,8099],9],[[8100,8199],9],[[8200,8299],8],[[8300,8399],7],[[8400,8499],7],[[8500,8599],5],[[8600,8699],2],[[8700,8799],5],[[8800,8899],9],[[8900,8999],2],[[9000,9099],1],[[9200,9299],2],[[9500,9599],1],[[9600,9699],1],[[9700,9799],1],[[9900,9999],3],[[10000,10999],4],[[11000,11999],4],[[12000,12999],4],[[13000,13999],2],[[14000,14999],5],[[15000,15999],7],[[16000,16999],8],[[17000,17999],1],[[20000,20999],1]],"lookup:dev":[[[22000,22999],1],[[26000,26999],2],[[29000,29999],1],[[36000,36999],1]],"read:zfs":[[[5300,5399],5],[[5400,5499],8],[[5500,5599],12],[[5600,5699],5],[[5700,5799],14],[[5800,5899],11],[[5900,5999],12],[[6000,6099],20],[[6100,6199],18],[[6200,6299],19],[[6300,6399],23],[[6400,6499],18],[[6500,6599],13],[[6600,6699],10],[[6700,6799],17],[[6800,6899],17],[[6900,6999],19],[[7000,7099],20],[[7100,7199],21],[[7200,7299],20],[[7300,7399],17],[[7400,7499],13],[[7500,7599],13],[[7600,7699],15],[[7700,7799],14],[[7800,7899],9],[[7900,7999],5],[[8000,8099],8],[[8100,8199],7],[[8200,8299],3],[[8300,8399],2],[[8400,8499],2],[[8500,8599],4],[[8600,8699],1],[[8700,8799],1],[[8800,8899],3],[[8900,8999],2],[[9000,9099],2],[[9100,9199],3],[[9200,9299],2],[[9300,9399],4],[[9400,9499],2],[[9500,9599],2],[[9600,9699],5],[[9700,9799],1],[[9900,9999],1],[[10000,10999],7],[[11000,11999],2],[[12000,12999],2],[[13000,13999],5],[[14000,14999],7],[[15000,15999],4],[[16000,16999],5],[[17000,17999],5],[[18000,18999],13],[[19000,19999],17],[[20000,20999],32],[[21000,21999],47],[[22000,22999],58],[[23000,23999],38],[[24000,24999],41],[[25000,25999],30],[[26000,26999],24],[[27000,27999],13],[[28000,28999],10],[[29000,29999],9],[[30000,30999],8],[[31000,31999],6],[[32000,32999],10],[[33000,33999],10],[[34000,34999],5],[[35000,35999],4],[[36000,36999],2],[[37000,37999],2],[[38000,38999],1],[[40000,40999],1],[[43000,43999],1],[[44000,44999],1],[[47000,47999],2],[[49000,49999],1],[[51000,51999],2],[[73000,73999],1],[[74000,74999],2],[[75000,75999],2],[[76000,76999],1],[[78000,78999],1],[[81000,81999],1],[[82000,82999],1],[[84000,84999],1],[[85000,85999],1],[[3100000,3199999],1],[[4700000,4799999],1],[[8200000,8299999],1],[[9800000,9899999],1]],"readlink:tmpfs":[[[5300,5399],1],[[5400,5499],4],[[5500,5599],4],[[5600,5699],2],[[5900,5999],1],[[6000,6099],2],[[6200,6299],1],[[6300,6399],1],[[6600,6699],1],[[6900,6999],1],[[7200,7299],1],[[7600,7699],1],[[8200,8299],1],[[8400,8499],2],[[9900,9999],1],[[10000,10999],1],[[11000,11999],1],[[13000,13999],1],[[14000,14999],1]],"access:zfs":[[[5900,5999],2],[[6000,6099],1],[[6200,6299],5],[[6300,6399],13],[[6400,6499],25],[[6500,6599],18],[[6600,6699],30],[[6700,6799],38],[[6800,6899],31],[[6900,6999],53],[[7000,7099],42],[[7100,7199],39],[[7200,7299],66],[[7300,7399],75],[[7400,7499],50],[[7500,7599],49],[[7600,7699],40],[[7700,7799],20],[[7800,7899],29],[[7900,7999],24],[[8000,8099],21],[[8100,8199],11],[[8200,8299],4],[[8300,8399],5],[[8400,8499],4],[[8500,8599],2],[[8600,8699],4],[[8700,8799],2],[[8800,8899],2],[[8900,8999],7],[[9000,9099],1],[[9200,9299],1],[[9400,9499],1],[[9500,9599],1],[[9700,9799],1],[[9800,9899],2],[[9900,9999],2],[[10000,10999],12],[[11000,11999],5],[[12000,12999],8],[[13000,13999],7],[[14000,14999],6],[[15000,15999],6],[[16000,16999],2],[[17000,17999],5],[[18000,18999],1],[[19000,19999],2],[[20000,20999],1],[[76000,76999],1]],"write:zfs":[[[22000,22999],3],[[23000,23999],1],[[30000,30999],2],[[50000,50999],1],[[58000,58999],1],[[61000,61999],1],[[66000,66999],2],[[69000,69999],1],[[72000,72999],1],[[79000,79999],1],[[89000,89999],1],[[120000,129999],3],[[130000,139999],1],[[790000,799999],1],[[800000,809999],1],[[810000,819999],1],[[860000,869999],1]],"lookup:tmpfs":[[[5100,5199],4],[[5200,5299],8],[[5300,5399],1],[[5400,5499],14],[[5500,5599],10],[[5600,5699],5],[[5700,5799],14],[[5800,5899],19],[[5900,5999],14],[[6000,6099],13],[[6100,6199],11],[[6200,6299],11],[[6300,6399],4],[[6400,6499],5],[[6500,6599],8],[[6600,6699],3],[[6700,6799],2],[[6800,6899],3],[[6900,6999],2],[[7000,7099],1],[[7100,7199],1],[[7200,7299],4],[[7300,7399],1],[[7500,7599],1],[[7800,7899],1],[[7900,7999],1],[[8000,8099],1],[[8200,8299],1],[[8300,8399],1],[[8400,8499],1],[[8500,8599],1],[[8700,8799],1],[[9100,9199],1],[[9200,9299],2],[[9400,9499],1],[[9500,9599],1],[[9600,9699],1],[[9700,9799],3],[[10000,10999],14],[[12000,12999],1],[[13000,13999],1]],"write:tmpfs":[[[7800,7899],1],[[7900,7999],1],[[8000,8099],1],[[8700,8799],1],[[8900,8999],1],[[9200,9299],1],[[9400,9499],1],[[9600,9699],1],[[39000,39999],1],[[42000,42999],1],[[43000,43999],2],[[46000,46999],1],[[47000,47999],1],[[48000,48999],1],[[49000,49999],2],[[51000,51999],1],[[54000,54999],1],[[55000,55999],1]],"ioctl:zfs":[[[8900,8999],1],[[9100,9199],1],[[9200,9299],1],[[9600,9699],1]],"ioctl:tmpfs":[[[5400,5499],4],[[5600,5699],11],[[5700,5799],11],[[5800,5899],4],[[5900,5999],2],[[6000,6099],1],[[6200,6299],1],[[6400,6499],1],[[6600,6699],1],[[8700,8799],1],[[8800,8899],1],[[8900,8999],1],[[9400,9499],1],[[11000,11999],2],[[12000,12999],2],[[13000,13999],4]],"symlink:tmpfs":[[[22000,22999],2],[[26000,26999],2]],"getpage:tmpfs":[[[9000,9099],1],[[9100,9199],1],[[9900,9999],1],[[10000,10999],2]],"create:tmpfs":[[[22000,22999],4],[[23000,23999],4],[[24000,24999],4],[[26000,26999],3],[[28000,28999],2]],"remove:zfs":[[[49000,49999],2],[[50000,50999],2],[[65000,65999],2],[[89000,89999],1],[[120000,129999],1],[[130000,139999],1],[[160000,169999],1],[[170000,179999],1],[[180000,189999],1]],"access:tmpfs":[[[5600,5699],6],[[5700,5799],5],[[5800,5899],6],[[5900,5999],4],[[6000,6099],5],[[6100,6199],4],[[6200,6299],1],[[6300,6399],2],[[6700,6799],1],[[6800,6899],1],[[7000,7099],1],[[7100,7199],1],[[7200,7299],2],[[7300,7399],1],[[7400,7499],1],[[7500,7599],1],[[7600,7699],3],[[7700,7799],2],[[7800,7899],2],[[7900,7999],1],[[8600,8699],1],[[8700,8799],1],[[12000,12999],1]],"getpage:zfs":[[[3900,3999],1],[[4000,4099],486],[[4100,4199],2553],[[4200,4299],448],[[4300,4399],745],[[4400,4499],234],[[4500,4599],171],[[4600,4699],77],[[4700,4799],94],[[4800,4899],68],[[4900,4999],82],[[5000,5099],118],[[5100,5199],97],[[5200,5299],84],[[5300,5399],72],[[5400,5499],46],[[5500,5599],40],[[5600,5699],36],[[5700,5799],30],[[5800,5899],21],[[5900,5999],23],[[6000,6099],33],[[6100,6199],20],[[6200,6299],21],[[6300,6399],24],[[6400,6499],28],[[6500,6599],25],[[6600,6699],25],[[6700,6799],42],[[6800,6899],34],[[6900,6999],42],[[7000,7099],42],[[7100,7199],37],[[7200,7299],45],[[7300,7399],54],[[7400,7499],44],[[7500,7599],43],[[7600,7699],55],[[7700,7799],48],[[7800,7899],49],[[7900,7999],51],[[8000,8099],36],[[8100,8199],49],[[8200,8299],36],[[8300,8399],33],[[8400,8499],24],[[8500,8599],20],[[8600,8699],21],[[8700,8799],17],[[8800,8899],12],[[8900,8999],16],[[9000,9099],16],[[9100,9199],12],[[9200,9299],13],[[9300,9399],17],[[9400,9499],8],[[9500,9599],9],[[9600,9699],9],[[9700,9799],7],[[9800,9899],7],[[9900,9999],7],[[10000,10999],70],[[11000,11999],39],[[12000,12999],16],[[13000,13999],8],[[14000,14999],5],[[15000,15999],15],[[16000,16999],4],[[17000,17999],5],[[18000,18999],5],[[19000,19999],2],[[20000,20999],2],[[27000,27999],2],[[28000,28999],2],[[29000,29999],1],[[38000,38999],1],[[39000,39999],1],[[44000,44999],2],[[47000,47999],1],[[49000,49999],1],[[50000,50999],1],[[52000,52999],1]],"remove:tmpfs":[[[9000,9099],3],[[9500,9599],1],[[12000,12999],2],[[18000,18999],1],[[19000,19999],1],[[20000,20999],2],[[22000,22999],1],[[24000,24999],1],[[26000,26999],1],[[27000,27999],1],[[28000,28999],1],[[34000,34999],3],[[35000,35999],1],[[37000,37999],1]],"map:zfs":[[[8200,8299],1],[[8300,8399],3],[[8400,8499],2],[[8500,8599],6],[[8600,8699],6],[[8700,8799],18],[[8800,8899],9],[[8900,8999],10],[[9000,9099],19],[[9100,9199],9],[[9200,9299],11],[[9300,9399],21],[[9400,9499],20],[[9500,9599],18],[[9600,9699],20],[[9700,9799],24],[[9800,9899],19],[[9900,9999],10],[[10000,10999],130],[[11000,11999],53],[[12000,12999],8],[[13000,13999],2],[[14000,14999],28],[[15000,15999],42],[[16000,16999],44],[[17000,17999],42],[[18000,18999],20],[[19000,19999],12],[[20000,20999],7],[[21000,21999],1],[[22000,22999],3],[[23000,23999],1],[[25000,25999],2],[[26000,26999],2],[[27000,27999],2],[[30000,30999],5],[[31000,31999],3],[[33000,33999],2],[[35000,35999],1],[[36000,36999],1],[[53000,53999],3],[[54000,54999],1],[[55000,55999],1],[[57000,57999],1],[[58000,58999],1],[[61000,61999],1]],"getattr:zfs":[[[4800,4899],7],[[4900,4999],66],[[5000,5099],129],[[5100,5199],100],[[5200,5299],54],[[5300,5399],41],[[5400,5499],39],[[5500,5599],45],[[5600,5699],32],[[5700,5799],40],[[5800,5899],26],[[5900,5999],28],[[6000,6099],23],[[6100,6199],16],[[6200,6299],25],[[6300,6399],27],[[6400,6499],20],[[6500,6599],20],[[6600,6699],25],[[6700,6799],26],[[6800,6899],27],[[6900,6999],30],[[7000,7099],31],[[7100,7199],31],[[7200,7299],27],[[7300,7399],46],[[7400,7499],41],[[7500,7599],36],[[7600,7699],35],[[7700,7799],45],[[7800,7899],55],[[7900,7999],40],[[8000,8099],49],[[8100,8199],39],[[8200,8299],20],[[8300,8399],22],[[8400,8499],19],[[8500,8599],18],[[8600,8699],11],[[8700,8799],10],[[8800,8899],8],[[9000,9099],7],[[9100,9199],5],[[9300,9399],3],[[9400,9499],1],[[9500,9599],1],[[9600,9699],3],[[9700,9799],1],[[9800,9899],3],[[9900,9999],2],[[10000,10999],13],[[11000,11999],8],[[12000,12999],4],[[13000,13999],1],[[14000,14999],2],[[15000,15999],5],[[16000,16999],4],[[17000,17999],1],[[18000,18999],3],[[20000,20999],1],[[40000,40999],1]],"create:zfs":[[[110000,119999],1],[[120000,129999],1],[[140000,149999],1],[[150000,159999],3],[[160000,169999],1],[[170000,179999],4],[[200000,209999],1]],"getattr:tmpfs":[[[5100,5199],14],[[5200,5299],14],[[5300,5399],5],[[5400,5499],8],[[5500,5599],5],[[5600,5699],4],[[5700,5799],1],[[5800,5899],5],[[5900,5999],14],[[6000,6099],9],[[6100,6199],2],[[6200,6299],3],[[6300,6399],9],[[6400,6499],4],[[6500,6599],1],[[6700,6799],1],[[6800,6899],2],[[6900,6999],3],[[7000,7099],1],[[7200,7299],2],[[7300,7399],2],[[7400,7499],1],[[7500,7599],2],[[7600,7699],2],[[7700,7799],3],[[7800,7899],1],[[8000,8099],1],[[8100,8199],1],[[8300,8399],1],[[8500,8599],2],[[8900,8999],2],[[9200,9299],1],[[10000,10999],1],[[12000,12999],2],[[13000,13999],1]],"lookup:zfs":[[[4400,4499],244],[[4500,4599],3849],[[4600,4699],4843],[[4700,4799],3476],[[4800,4899],2267],[[4900,4999],1222],[[5000,5099],1006],[[5100,5199],631],[[5200,5299],470],[[5300,5399],438],[[5400,5499],480],[[5500,5599],428],[[5600,5699],363],[[5700,5799],332],[[5800,5899],299],[[5900,5999],302],[[6000,6099],259],[[6100,6199],250],[[6200,6299],200],[[6300,6399],151],[[6400,6499],103],[[6500,6599],78],[[6600,6699],70],[[6700,6799],64],[[6800,6899],48],[[6900,6999],39],[[7000,7099],35],[[7100,7199],38],[[7200,7299],15],[[7300,7399],28],[[7400,7499],22],[[7500,7599],15],[[7600,7699],12],[[7700,7799],10],[[7800,7899],19],[[7900,7999],77],[[8000,8099],75],[[8100,8199],74],[[8200,8299],49],[[8300,8399],77],[[8400,8499],87],[[8500,8599],100],[[8600,8699],89],[[8700,8799],61],[[8800,8899],41],[[8900,8999],34],[[9000,9099],22],[[9100,9199],13],[[9200,9299],14],[[9300,9399],7],[[9400,9499],7],[[9500,9599],8],[[9600,9699],6],[[9700,9799],10],[[9800,9899],10],[[9900,9999],16],[[10000,10999],148],[[11000,11999],55],[[12000,12999],32],[[13000,13999],20],[[14000,14999],22],[[15000,15999],24],[[16000,16999],30],[[17000,17999],22],[[18000,18999],20],[[19000,19999],8],[[20000,20999],4],[[21000,21999],4],[[22000,22999],2],[[23000,23999],3],[[24000,24999],2],[[25000,25999],6],[[26000,26999],5],[[27000,27999],5],[[29000,29999],5],[[30000,30999],1],[[31000,31999],2],[[33000,33999],1],[[34000,34999],1],[[37000,37999],2],[[38000,38999],1],[[44000,44999],1],[[45000,45999],1],[[46000,46999],1],[[48000,48999],1],[[56000,56999],1],[[57000,57999],1],[[62000,62999],1],[[63000,63999],1],[[80000,80999],1],[[87000,87999],1]],"readlink:dev":[[[6900,6999],1],[[7300,7399],2],[[10000,10999],1]]}],"interval_epoch":1448475916}';

my $connect_info = { dsn => 'DBI:Pg:dbname=template1;host=localhost;port=15432', user => 'postgres', password => '' };

my $schema = PA::Schema->connect(
  $connect_info
);

my $hosts_rs = $schema->resultset( 'Host' );
my $fsoplat_rs = $schema->resultset( 'Fsoplat' );

my $dhref = decode_json($js_data);

# Each set of data contains the interval data aref, and the interval timestamp in epoch secs
my $data = $dhref->{interval_data};
my $timestamp = $dhref->{interval_epoch};
my $dtstamp = DateTime->from_epoch( epoch     => $timestamp,
                                    time_zone => 'UTC' );
#my $db_dtstamp = DateTime::Format::Pg->format_datetime($dtstamp);
my $dtf = $schema->storage->datetime_parser;
my $db_dtstamp = $dtf->format_datetime($dtstamp);

# TODO: Open a transaction here?
#my $guard = $fsoplat_rs->result_source->schema->txn_scope_guard;

# try {
#   $schema->txn_do(
#     sub {
#       for (1..50) {
#         foreach my $ref (@{$data}) {
#           foreach my $key (keys %$ref) {
#             my ($op, $fstype) = split(/:/, $key);
#             #say "OP: $op, FSTYP: $fstype";
#             foreach my $range_counts (@{$ref->{$key}}) {
#               my ($range_aref, $count) = ($range_counts->[0], $range_counts->[1]);
#               #say "RANGE: [ $range_aref->[0], $range_aref->[1] ] => $count";
#               $fsoplat_rs->create(
#                 { host_fk => 1,
#                   timestamp => $dtstamp,
#                   fsop      => $op,
#                   fstype    => $fstype,
#                   latrange  => $range_aref,
#                   count     => $count,
#                 }
#               );
#             }
#           }
#         }
#       }
#     });
# } catch {
#   say "Something horrible happened";
# };


my ($import_aref) = [];
my ($header) = [ qw( host_fk timestamp fsop fstype latrange count ) ];
push @$import_aref, $header;

#for (1..50) {

  foreach my $ref (@{$data}) {
    foreach my $key (keys %$ref) {
      my ($op, $fstype) = split(/:/, $key);
      #say "OP: $op, FSTYP: $fstype";
      foreach my $range_counts (@{$ref->{$key}}) {
        my ($range_aref, $count) = ($range_counts->[0], $range_counts->[1]);
        #say "RANGE: [ $range_aref->[0], $range_aref->[1] ] => $count";
        $range_aref = "[ $range_aref->[0], $range_aref->[1] ]";
        push @$import_aref,
          [ 1, $db_dtstamp, $op, $fstype, $range_aref, $count ];
      }
    }
  }
#}

$schema->resultset("Fsoplat")->populate( $import_aref );

say "COMPLETE!";

exit;


#while (my $dhref = $mq->recv(10000)) {
#  my ($host_id, $host_record);
#  #say $dhref->{body};
#  #say Dumper( [ $dhref ] );
#  my $stat_ref = decode_json($dhref->{body});
#  #say Dumper( $stat_ref );
#  my ($hostname) = $dhref->{routing_key} =~ m/^([^.]+)\./;
#  $host_record =
#    $hosts_rs->find({ name => $hostname });
#  # TODO: die here if we couldn't look up the hostname in the host table -
#  # that should never happen
#
#  my $new_vmstat = $host_record->create_related('vmstat_rs',
#    {
#      freemem   => $stat_ref->{freemem},
#      timestamp => DateTime->from_epoch( epoch => $stat_ref->{timestamp},
#                                         time_zone => 'UTC' ),
#      #host_fk   => $host_record->host_id,
#    }
#  );
#}



