#!/usr/bin/env perl

use strict;
use warnings;
use v5.20;

my $datetime = "2017 Jan  9 15:48:00";
my $epoch = "1483994938";
my $TZ    = "US/Eastern";

my $stack_k = q/
              SPARC-T5`hwblkclr+0x44
              unix`run_interrupt_thread
              unix`pagezero+0x68
              genunix`anon_map_getpages+0x778
              genunix`segvn_fault_anonpages+0x4f4
              genunix`segvn_fault+0x508
              genunix`as_fault+0x438
              unix`pagefault+0x54
              unix`trap+0xe74
              unix`utl0+0x4c
                1

              SPARC-T5`hwblkclr+0x90
              unix`run_interrupt_thread
              unix`pagezero+0x68
              genunix`anon_map_getpages+0x778
              genunix`segvn_fault_anonpages+0x4f4
              genunix`segvn_fault+0x508
              genunix`as_fault+0x438
              unix`pagefault+0x54
              unix`trap+0xe74
              unix`utl0+0x4c
                1

              genunix`anon_addhash+0xa0
              unix`run_interrupt_thread
              genunix`anon_alloc+0x144
              genunix`anon_map_getpages+0x3f8
              genunix`segvn_fault_anonpages+0x4f4
              genunix`segvn_fault+0x508
              genunix`as_fault+0x438
              unix`pagefault+0x54
              unix`trap+0xe74
              unix`utl0+0x4c
                2

              unix`run_interrupt_thread
                5
/;

my $stack_ku = q/
              zfs`dmu_zfetch_find_remove_trigger+0x24
              zfs`dmu_zfetch_find_remove_trigger+0x14
              zfs`dmu_zfetch+0x54
              zfs`dbuf_read+0x1b8
              zfs`dnode_hold_impl+0x164
              zfs`dmu_read+0x18
              zfs`zfs_log_write+0x1f4
              zfs`zfs_write+0x8a8
              genunix`fop_write+0x84
              genunix`write+0x298
              unix`syscall_trap+0x228

              libc.so.1`__write+0x8
              postgres`XLogFlush+0x1b0
              postgres`RecordTransactionCommit+0x4ac
              postgres`CommitTransaction+0xec
              postgres`CommitTransactionCommand+0x6c
              postgres`finish_xact_command+0x7c
              postgres`exec_simple_query+0x3b4
              postgres`PostgresMain+0xb1c
              postgres`BackendRun+0x264
              postgres`BackendStartup+0x178
              postgres`ServerLoop+0x240
              postgres`PostmasterMain+0x12bc
              postgres`main+0x3a4
              postgres`_start+0x12c
                1

              zfs`zio_execute
              unix`run_interrupt_thread
              zfs`zio_wait+0x20
              zfs`dmu_tx_count_write+0x234
              zfs`dmu_tx_hold_write+0x38
              zfs`zfs_write+0x60c
              genunix`fop_write+0x84
              genunix`write+0x298
              unix`syscall_trap+0x228

              libc.so.1`__write+0x8
              postgres`mdextend+0x70
              postgres`ReadBuffer_common+0x404
              postgres`ReadBufferExtended+0xac
              postgres`RelationGetBufferForTuple+0x578
              postgres`heap_insert+0x5c
              postgres`ExecInsert+0x16c
              postgres`ExecModifyTable+0x238
              postgres`ExecProcNode+0x98
              postgres`ExecutePlan+0xd8
              postgres`standard_ExecutorRun+0xb0
              postgres`ProcessQuery+0x78
              postgres`PortalRunMulti+0x12c
              postgres`FillPortalStore+0x78
              postgres`PortalRun+0x248
              postgres`exec_execute_message+0x298
              postgres`PostgresMain+0xc40
              postgres`BackendRun+0x264
              postgres`BackendStartup+0x178
              postgres`ServerLoop+0x240
                1
/;

my $stack_epoch_k = "$epoch\n\n$stack_k";
my $stack_datetime_k = "$datetime\n\n$stack_k";

my $regex = qr/ (?<segment> .+?)
                ^          \s+ (?<count>\d+)  \n
             /smx;
# Grab everything up to a count on a line alone
while ($stack_k =~ m{$regex}gsmx) {

  # Strip away anything in the beginning that is useless
  say "SEGMENT: " . $+{segment};
  say "COUNT:   " . $+{count};

}
