angular.module("ng-bootstrap",[]),angular.module("ng-bootstrap").directive("checkbox",[function(){return{restrict:"E",templateUrl:"checkbox/checkbox.html",replace:!0,scope:{checked:"=",onCheck:"&"},link:function(e){void 0===e.checked&&(e.checked=!1)},controller:["$scope",function(e){e.check=function(){event.stopPropagation(),event.preventDefault(),e.checked=!e.checked,e.clicked=!0},e.$watch("checked",function(){e.clicked&&(e.onCheck(),e.clicked=!1)})}]}}]),angular.module("ng-bootstrap").factory("Grid",[function(){return function(e,t){this.$orderBy="adaptation",this.$reverse=!0,this.data=e||[],this.columns=t||[],this.events={},this.setData=function(e){this.data=e},this.bind=function(e,t){this.events.hasOwnProperty(e)||(this.events[e]=[]),this.events[e].push(t)},this.orderBy=function(e){this.$reverse=this.$orderBy===e&&this.$reverse,this.$orderBy=e}}}]).directive("grid",[function(){return{restrict:"E",templateUrl:"grid/grid.html",replace:!0,scope:{ngRowClick:"&ngRowClick",grid:"=ngModel",$filter:"=filter"},link:function(e){e.$orderBy=null,e.$reverse=!1,e.$itemsPerPage=25,e.$currentPage=1,e.$totalItems=0,e.$totalPages=0},controller:["$scope",function(e){e.orderBy=function(t){e.$reverse=e.$orderBy===t.field&&!e.$reverse,e.$orderBy=t.field},e.fire=function(t,n,i,r){e.grid.events.hasOwnProperty(t)&&angular.forEach(e.grid.events[t],function(e){e(n,i,r)})}}]}}]),angular.module("ng-bootstrap").directive("tabs",[function(){return{restrict:"E",transclude:!0,templateUrl:"tabs/tabs.html",scope:{},replace:!0,controller:["$scope",function(e){var t=e.panes=[];e.activate=function(e){e.disabled||(angular.forEach(t,function(e){e.active=!1}),e.active=!0)},this.addPane=function(n){0==t.length&&e.activate(n),t.push(n)}}]}}]).directive("pane",[function(){return{require:"^tabs",restrict:"E",transclude:!0,scope:{title:"@",disabled:"="},templateUrl:"tabs/pane.html",replace:!0,link:function(e,t,n,i){i.addPane(e)}}}]),angular.module("ng-bootstrap").factory("Event",[function(){return function(){this.events=[],this.on=function(e,t){this.events[e]||(this.events[e]=[]),this.events[e].push(t)},this.fire=function(e){if(this.events[e])for(var t in this.events[e])this.events[e].hasOwnProperty(t)&&this.events[e][t]()}}}]).factory("Node",[function(){return function e(t,n,i){var r=this;this.root=n,this.parent=i||null,this.nodes=[],this.expanded=!1,this.checked=!1,this.depth=this.parent?this.parent.depth+1:1,angular.forEach(t,function(e,t){"nodes"!==t&&(r[t]=e)}),angular.forEach(t.nodes,function(t){r.nodes.push(new e(t,n,r))}),this.filter=function(e){var t=[];for(var n in this.nodes)if(this.nodes.hasOwnProperty(n)){var i=e(this.nodes[n]);i&&t.push(i),t=t.concat(this.nodes[n].filter(e))}return t},this.toggle=function(){this.nodes.length&&(this.expanded=!this.expanded)},this.onCheck=function(){this.checkParent(this.checked),this.checkChildren(this.checked),this.root.event.fire("checked")},this.checkParent=function(e){if(this.parent){for(var t in this.parent.nodes)if(this.parent.nodes.hasOwnProperty(t)&&this.parent.nodes[t].checked!==e){e=.5;break}this.parent.checked=e,this.parent.checkParent(e)}},this.checkChildren=function(e){for(var t in this.nodes)this.nodes.hasOwnProperty(t)&&(this.nodes[t].checked=e,this.nodes[t].checkChildren(e))}}}]).factory("TreeModel",["Node","Event",function(e,t){return function(n){var i=new e(n,this);this.nodes=i.nodes,this.event=new t,this.filter=i.filter}}]).directive("treeview",["$compile","$templateCache",function(e,t){var n=t.get("treeview/treeview.html");return{restrict:"E",replace:!0,scope:{nodes:"="},link:function(t,i){t.$watch("nodes",function(){t.nodes&&t.nodes.length&&i.html(e(n)(t))})}}}]),angular.module("ng-bootstrap").run(["$templateCache",function(e){e.put("checkbox/checkbox.html","<div class=\"if-checkbox\" data-ng-click=\"check()\" data-ng-class=\"{'false':'false',0.5:'mixed','true':'true'}[checked]\"><span class=\"fa fa-fw\"></span></div>"),e.put("grid/grid.html",'<table class="table table-bordered table-hover"><thead><tr><th data-ng-repeat="column in grid.columns" data-ng-class="column.class" style="cursor: pointer" data-ng-click="orderBy(column)">{{ column.title }}</th></tr></thead><tbody><tr data-ng-repeat="row in grid.data | filter: $filter | orderBy:$orderBy:$reverse | limitTo:$itemsPerPage:$itemsPerPage * ($currentPage - 1)" data-ng-click="fire(\'tr.click\', row)"><td data-ng-repeat="column in grid.columns">{{ column.render(row) }}</td></tr></tbody></table>'),e.put("tabs/pane.html",'<div role="tabpanel" class="tab-pane" data-ng-class="{\'active\':active}" ng-transclude></div>'),e.put("tabs/tabs.html",'<div><ul class="nav nav-tabs" role="tablist"><li role="presentation" data-ng-repeat="pane in panes" data-ng-class="{\'active\':pane.active,\'disabled\':pane.disabled}"><a data-ng-click="activate(pane)" role="tab">{{ pane.title }}</a></li></ul><div class="tab-content" ng-transclude></div></div>'),e.put("treeview/treeview.html",'<div data-ng-repeat="node in nodes"><div class="list-group-item" data-ng-click="node.toggle()"><span>{{ node.name }}</span><div class="pull-right"><checkbox checked="node.checked" on-check="node.onCheck()"></checkbox></div><div class="pull-right"><span class="badge">{{ node.count }}</span></div></div><div class="list-group-submenu" data-ng-if="node.expanded"><treeview nodes="node.nodes"></treeview></div></div>')}]);